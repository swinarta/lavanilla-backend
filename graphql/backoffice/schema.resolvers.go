package self_service

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.79

import (
	"context"
	"lavanilla/graphql/backoffice/model"
	"lavanilla/service/shopify"

	"github.com/samber/lo"
)

// DraftOrderComplete is the resolver for the draftOrderComplete field.
func (r *mutationResolver) DraftOrderComplete(ctx context.Context, id string) (bool, error) {
	_, err := r.ShopifyClient.DraftOrderComplete(ctx, id)
	if err != nil {
		return false, err
	}
	return true, nil
}

// DraftOrderDesigner is the resolver for the draftOrderDesigner field.
func (r *queryResolver) DraftOrderDesigner(ctx context.Context) ([]*model.Order, error) {
	orders, err := r.ShopifyClient.GetDraftOrders(ctx, lo.ToPtr("DESAINER"))
	if err != nil {
		return nil, err
	}
	return lo.Map(orders.DraftOrders.Nodes, func(item shopify.GetDraftOrderDraftOrdersDraftOrderConnectionNodesDraftOrder, _ int) *model.Order {
		return &model.Order{
			ID:   item.Id,
			Name: item.Name,
		}
	}), nil
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
