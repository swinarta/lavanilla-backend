mutation FulfillmentCreateV2($fulfillment: FulfillmentV2Input!) {
    fulfillmentCreateV2(fulfillment: $fulfillment) {
        fulfillment {
            id
            status
        }
        userErrors {
            field
            message
        }
    }
}

mutation TagsAdd($id: ID!, $tag: String!) {
    tagsAdd(id: $id, tags: [$tag]) {
        __typename
        userErrors {
            message
        }
    }
}

mutation UpdateTrackingInfo($fulfillmentId: ID!, $notifyCustomer: Boolean, $trackingInfoInput: FulfillmentTrackingInput!) {
    fulfillmentTrackingInfoUpdateV2(fulfillmentId: $fulfillmentId, notifyCustomer: $notifyCustomer, trackingInfoInput: $trackingInfoInput) {
        fulfillment {
            trackingInfo {
                company
                number
                url
            }
        }
        userErrors {
            field
            message
        }
    }
}

query GetFulfillment($id: ID!) {
    fulfillment(id: $id) {
        status
    }
}

query GetFulfillmentOrder($id: ID!) {
    fulfillmentOrder(id: $id) {
        fulfillments(first: 20) {
            nodes {
                id
                status
            }
        }
    }
}

query DeliveryProfiles {
    deliveryProfiles(first: 50) {
        nodes {
            id
            name
        }
    }
}

query OrderDetailById($id: ID!) {
    order(id: $id) {
        id
        email
        name
        note
        phone
        shippingLine {
            title
        }
        transactions {
            gateway
        }
        totalPriceSet {
            presentmentMoney {
                amount
                currencyCode
            }
            shopMoney {
                amount
                currencyCode
            }
        }
        currentTotalPriceSet {
            presentmentMoney {
                amount
                currencyCode
            }
            shopMoney {
                amount
                currencyCode
            }
        }
        fulfillmentOrders(first: 10, query: "status:OPEN OR status:CLOSED") {
            nodes {
                id
                status
                lineItems(first: 20) {
                    nodes {
                        requiresShipping
                        productTitle
                        variantTitle
                        sku
                        totalQuantity
                        originalUnitPriceSet {
                            presentmentMoney {
                                amount
                                currencyCode
                            }
                            shopMoney {
                                amount
                                currencyCode
                            }
                        }
                        weight {
                            unit
                            value
                        }
                    }
                }
                assignedLocation {
                    name
                    phone
                    address1
                    address2
                    city
                    province
                    countryCode
                    zip
                    location {
                        id
                    }
                }
                destination {
                    address1
                    address2
                    city
                    company
                    province
                    countryCode
                    firstName
                    lastName
                    zip
                    phone
                    email
                }
                fulfillments(first: 1) {
                    nodes {
                        status
                        id
                        service {
                            type
                        }
                    }
                }
            }
        }
        customAttributes {
            key
            value
        }
    }
}

query GetDraftOrder($query: String) {
    draftOrders(first: 50, sortKey: UPDATED_AT, reverse: true, query: $query) {
        nodes {
            id
            name
            email
            phone
        }
    }
}

mutation CreateCustomer($input: CustomerInput!) {
    customerCreate(input: $input) {
        customer {
            id
        }
        userErrors {
            field
            message
        }
    }
}

query GetCustomer($query: String!) {
    customers(first: 1, query: $query) {
        nodes {
            id
            firstName
            lastName
        }
    }
}

query GetProductsSelfService {
    products(first: 50) {
        edges {
            node {
                id
                description
                title
                priceRangeV2 {
                    minVariantPrice {
                        amount
                    }
                    maxVariantPrice {
                        amount
                    }
                }
                media(first: 1) {
                    nodes {
                        preview {
                            image {
                                url
                            }
                        }
                    }
                }

            }
        }
    }
}

query GetProduct($id: ID!) {
    product(id: $id) {
        description
        variants(first: 10) {
            nodes {
                id
                title
                sku
                price
                image {
                    url
                }
            }
        }
        priceRangeV2 {
            minVariantPrice {
                amount
            }
            maxVariantPrice {
                amount
            }
        }
        media(first: 10) {
            nodes {
                preview {
                    image {
                        url
                    }
                }
            }
        }
    }
}